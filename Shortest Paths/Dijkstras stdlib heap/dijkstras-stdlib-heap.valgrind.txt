==30123== Memcheck, a memory error detector
==30123== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30123== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==30123== Command: ./a.out
==30123== Parent PID: 6892
==30123== 
==30123== 
==30123== HEAP SUMMARY:
==30123==     in use at exit: 26,237 bytes in 191 blocks
==30123==   total heap usage: 284 allocs, 93 frees, 33,453 bytes allocated
==30123== 
==30123== 4,096 bytes in 1 blocks are still reachable in loss record 62 of 63
==30123==    at 0x100014E3B: malloc (in /usr/local/Cellar/valgrind/HEAD/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==30123==    by 0x1002D6789: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==30123==    by 0x1002EB7DD: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==30123==    by 0x1002D59E5: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==30123==    by 0x1002D5FDD: fwrite (in /usr/lib/system/libsystem_c.dylib)
==30123==    by 0x10003138B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==30123==    by 0x1000271CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==30123==    by 0x100047211: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (in /usr/lib/libc++.1.dylib)
==30123==    by 0x100046DFD: std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, long) const (in /usr/lib/libc++.1.dylib)
==30123==    by 0x10002D060: std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int) (in /usr/lib/libc++.1.dylib)
==30123==    by 0x100003528: Graph::print() (dijkstras-stdlib-heap.cpp:120)
==30123==    by 0x100001F48: main (dijkstras-stdlib-heap.cpp:233)
==30123== 
==30123== LEAK SUMMARY:
==30123==    definitely lost: 0 bytes in 0 blocks
==30123==    indirectly lost: 0 bytes in 0 blocks
==30123==      possibly lost: 0 bytes in 0 blocks
==30123==    still reachable: 4,096 bytes in 1 blocks
==30123==         suppressed: 22,141 bytes in 190 blocks
==30123== 
==30123== For counts of detected and suppressed errors, rerun with: -v
==30123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 18 from 18)
